name: Build

on:
  push:
    branches: main
    tags:
      - "v*.*.*"
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install node
      uses: actions/setup-node@v3
      with:
       node-version: 16
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Setup pip cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-3.10-${{ hashFiles('package.json') }}
        restore-keys: |
          pip-3.10-
          pip-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
    - name: Setup yarn cache
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          yarn-
    
    - name: Install dependencies
      run: python -m pip install -U jupyterlab~=3.1 check-manifest

    - name: Build the extension
      run: |
        set -eux
        jlpm
        jlpm run eslint:check

        pip install build
        python -m build

        pip install dist/*.whl
        jupyter server extension list 2>&1 | grep -ie "jupyterlab_slurm_time.*OK"
        jupyter labextension list 2>&1 | grep -ie "jupyterlab-slurm-time.*OK"
        python -m jupyterlab.browser_check

        check-manifest -v

        cp dist/*.tar.gz jupyterlab_slurm_time.tar.gz
        pip uninstall -y jupyterlab_slurm_time jupyterlab

#    - name: Build the extension
#      run: |
#        set -eux
#        jlpm
#        jlpm run eslint:check
#        python -m pip install .
#
#        jupyter server extension list 2>&1 | grep -ie "jupyterlab_slurm_time.*OK"
#
#        jupyter labextension list 2>&1 | grep -ie "jupyterlab-slurm-time.*OK"
#        python -m jupyterlab.browser_check
#
#        check-manifest -v
#
#        pip install build
#        python -m build
#        cp dist/*.tar.gz myextension.tar.gz
#        pip uninstall -y myextension jupyterlab
#        rm -rf myextension

    - uses: actions/upload-artifact@v3
      with:
        name: jupyterlab_slurm_time-sdist
        path: jupyterlab_slurm_time.tar.gz

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/*.tar.gz
          dist/*.whl

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: actions/download-artifact@v3
      with:
        name: jupyterlab_slurm_time-sdist
    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)
        pip install jupyterlab_slurm_time.tar.gz
        pip install jupyterlab
        jupyter labextension list 2>&1 | grep -ie "jupyterlab-slurm-time.*OK"
        python -m jupyterlab.browser_check --no-chrome-test
